name: Docker Build Push

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      image-registry:
        required: true
        type: string
      workdir:
        required: true
        type: string
    secrets:
      image-registry-user:
        required: true
      image-registry-password:
        required: true
jobs:
  build:
    name: Docker Build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.image-registry-user }}
        password: ${{ secrets.image-registry-password }}
    - name: Build
      working-directory: ${{ inputs.workdir }}
      run: >
        docker buildx build
        --platform=linux/amd64
        -t ${{ inputs.image-registry }}/${{ inputs.image }}:${{ env.GITHUB_SHA_SHORT }}
        --output=type=image,push=true
        ${GITHUB_WORKSPACE}/${{ inputs.workdir }}
  push:
    name: Docker Push
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.image-registry-user }}
        password: ${{ secrets.image-registry-password }}
    - name: Tag Push Latest
      working-directory: ${{ inputs.workdir }}
      run: >
        docker buildx build
        --platform=linux/amd64
        -t ${{ inputs.image }}:${{ env.GITHUB_SHA_SHORT }}
        -t ${{ inputs.image }}:latest
        --output=type=image,push=true
        ${GITHUB_WORKSPACE}/${{ inputs.workdir }}